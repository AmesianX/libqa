<!--
  Created by IntelliJ IDEA.
  User: yong
  Date: 2014. 9. 22.
  Time: 오후 10:57
-->

{{#partial "style"}}
{{!-- 여기에 사용자 css 정의 --}}
    <link href="/resource/app/js/DualEditor/css/DualEditor.css" rel="stylesheet">
{{/partial}}

{{#partial "script-header"}}
    <script src="/resource/app/js/DualEditor/DualEditor-core.js"></script>
{{/partial}}

{{# partial "content" }}
    <!-- 메뉴 -->
    <div class="container-fluid">
        <!-- contents -->
        <div class="col-md-12">
            <form id="qaForm">
                <!-- 관련키워드 -->
                <div class="row top-buffer">
                    <span class="col-md-12 pull-left section-category qna-alert-info">
                        <ul class="nav nav-tabs">
                            <li class="active"><a href="#">관련 키워드</a></li>
                            <li class="pull-left qa-view-keyowrdList">
                                {{#each keywordList}}
                                    <!--<span class="label label-primary">{{keywordName}}</span>-->
                                    {{#keywordBadge keywordName}}{{/keywordBadge}}
                                {{/each}}
                            </li>
                            <li class="pull-right">
                                <div class="user-profile-sm">
                                    <span class="nickname">{{qaContent.userNick}}</span>
                                    <img alt="avatar" class="profile-image" src="{{writer.userImage}}" />
                                </div>
                            </li>
                        </ul>
                    </span>
                </div>
                <!--// 관련키워드 -->
                <div class="media form-group top-buffer">
                    <!-- 본문 제목, 내용 -->
                    <div class="alert alert-info">
                        <div class="row">
                            <div class="col-md-8">
                                <span class="qna-alert-title">{{qaContent.title}}</span>
                                <span class="badge">{{qaReplyCnt}}</span>
                            </div>
                            <div class="col-md-4 text-right">
                                <span class="qna-alert-title">{{formatDate qaContent.insertDate "yyyy-MM-dd HH:mm"}}</span>
                                <span class="readCnt qna-alert-title">조회수 : {{qaContent.viewCount}}</span>
                            </div>
                        </div>
                    </div>
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <p>
                                {{{qaContent.contents}}}
                            </p>
                        </div>
                    </div>
                    <div class="form-group">
                        <div id="uploadFilesArea">
                            <span class="glyphicon glyphicon-paperclip btn-m"></span>
                            <span>Attachments</span>
                            <div id="uploadfileList" class="alert alert-success attachment-thumbnail">
                            </div>
                        </div>
                        <input name="uploadType" value="Qa" type="hidden">
                        <input name="uploadFilePath" id="uploadFilePath" type="hidden">
                        <input id="file-attachment" name="uploadfile" type="file" style="display:none">
                        <p class="help-block"></p>
                    </div>
                    <input type="hidden" name="qaId" value="{{qaContent.qaId}}">
                </div>
                <!--// 본문 제목, 내용 -->
                <div class="qa">
                    <div class="action-buttons qna-reply">
                        <i class="fa fa-thumbs-o-up" data-qa-vote-type="UP"><span class="like-count">({{qaContent.recommendCount}})</span></i>
                        <i class="fa fa-thumbs-o-down" data-qa-vote-type="DOWN"><span class="claim-count">({{qaContent.nonrecommendCount}})</span></i>
                    </div>
                    <div class="text-right">
                        <button id="editButton" type="button" class="btn btn-primary btn-sm">수정</button>
                        <button id="deleteButton" type="button" class="btn btn-danger btn-sm">삭제</button>
                        <button id="listButton" type="button" class="btn btn-primary btn-sm">목록</button>
                    </div>
                </div>

            </form>

            <!-- 댓글 영역 list -->
            <div id="replyList"></div>

            <!-- 댓글 입력 영역 -->
            <div class="top-buffer">
                <form name="qaReplyForm">
                    <div class="panel panel-default">
                        <div class="panel-heading">
                            <h3 class="panel-title">
                                답변
                            </h3>
                        </div>
                        <ul class="list-group">
                            <li class="list-group-item">
                                <div style="margin-left: 5px; margin-bottom: 10px;">
                                    <div class="avatar avatar-medium clearfix ">
                                        <div class="user-profile-sm">
                                            <!-- 세션에서 userNick 가져와야함 -->
                                            <span class="nickname">{{loggedUser.userNick}}</span>
                                            <img alt="avatar" class="profile-image" src="{{loggedUser.userImage}}" />
                                        </div>
                                    </div>
                                </div>
                                <!-- 댓글작성 Bootstrap Live Editor -->
                                <div class="row" style="margin-left: 5px; margin-bottom: 10px; width: 90%">
                                    <input type="text" class="form-control" id="title" name="title" placeholder="title">
                                </div>
                                <div id="editor" class="form-group">
                                    <input type="hidden" id="contents" name="contents" />
                                    <input type="hidden" id="contentsMarkup" name="contentsMarkup" />
                                    <input type="hidden" id="depthIdx" name="depthIdx" value="1" />   <!-- 답변 계층 -->
                                    <input type="hidden" id="parentsId" name="parentsId" value="0" />   <!-- 답변 계층 -->
                                </div>
                                <!--// 댓글작성 Bootstrap Live Editor -->

                                <!-- 댓글작성 저장 button -->
                                <div class="feed-write-bottom text-right">
                                    <button id="saveReplyButton" type="button" class="btn btn-primary btn-default">저장</button>
                                </div>
                            </li>
                        </ul>
                    </div>
                </form>
            </div>
            <!-- //댓글 입력 영역-->

        </div>
    </div>

    <!-- popover-config start -->
    <div id="popover-config-content" style="display: none;">
        <div class="button"><a href="#">수정</a></div>
        <div class="button"><a href="javascript:void(0);" onclick="Qa.getQaReplyId(this);">삭제</a></div>
    </div>

{{/partial}}

{{#partial "script-page"}}
{{embedded "qa/template/_fileList"}}
{{embedded "qa/template/_replyList"}}
    <script type="text/javascript">
        $(document).ready(function(){
            Qa.bindEvent();
            Qa.makeFileList();
            Qa.searchList();
        });

        function setParam(){
            $('#contents').val(DualEditor.getMarkupConvertToHtml());
            $('#contentsMarkup').val(DualEditor.getMarkupEditHtml());
        }

        var Qa = {
            makeEditor : function(){
                DualEditor.setting({
                    src : '/resource/app'
                    , tarketId : 'editor'
                    , type : 'mini'
                    , width : '100%'
                    , height : '400px;'
                });
            },
            searchList : function(){
                $.get("/qa/replyList",{qaId : $('[name=qaId]').val()}, function (response) {
                    if(response.resultCode != 1) {
                        alert(response.comment);
                        return;
                    }
                    var source = $('#qa-template-_replyList-hbs').html();
                    var template = Handlebars.compile(source);

                    var html = template(response);
                    $('#replyList').html(html);
                });
            },
            buttonEvent : function(){
                var that = this;
                $('#editButton').on("click", function(){
                    location.href = "/qa/edit/" + $('[name=qaId]').val();
                });
                $('#deleteButton').on("click",function(){
                    ConfirmDialog.deleteConfirm();
                });
                $('#listButton').on("click", function(){
                    location.href = "/qa/main";
                });
            },
            bindEvent : function(){
                this.cancleEvent();
                this.buttonEvent();
                this.saveReplyEvent();
            },
            saveReplyEvent : function(){
                $("#saveReplyButton").on("click", this.saveReply);
                $('button[name=saveChildReplyButton]').on("click", this.saveChildReply);
            },
            cancleEvent : function(){
                $("#cancelButton").on("click", this.cancelContents);
            },
            cancelContents : function(){
                location.href = '/qa/main';
            },
            makeFileList : function(){
                var that = this;
                $.get("/qa/fileList",{qaId : $('[name=qaId]').val()}, function (response) {
                    if(response.resultCode != 1) {
                        alert(response.comment);
                        return;
                    }
                    var source = $('#qa-template-_fileList-hbs').html();
                    var template = Handlebars.compile(source);

                    var html = template(response);
                    $('#uploadfileList').html(html);
                    that.unbindDeleteEventFileList();
                });
            },
            saveReply : function(){
                setParam();
                $.ajax({
                    type : 'POST',
                    data : $(this).closest('form').serialize() + '&qaId='+$('[name=qaId]').val(),
                    url : '/qa/saveReply',
                    success : function(data){
                        if(data.resultCode == 1) {
                            Qa.searchList();
                        }
                    },
                    error : function(XMLHttpRequest,textStatus,errorThrown){
                        alert(errorThrown);
                    }
                });
            },
            saveChildReply: function() {
                var data = $(this).closest('form').serialize();
                $.ajax({
                    type : 'POST',
                    data : data,
                    url : '/qa/saveChildReply',
                    success : function(data){
                        if(data.resultCode == 1) {
                            Qa.searchList();
                        }
                    },
                    error : function(XMLHttpRequest,textStatus,errorThrown){
                        alert(errorThrown);
                    }
                });
            },
            unbindDeleteEventFileList : function(){
                $('.fileDiv').find('[href=#fileDiv]').remove();
            },
            deleteContents : function(){
                $.ajax({
                    type : 'POST',
                    data : {qaId : $('[name=qaId]').val()},
                    url : '/qa/delete',
                    success : function(data){
                        if(data.resultCode == 1) {
                            ConfirmDialog.successConfirm();
                        }
                    },
                    error : function(XMLHttpRequest,textStatus,errorThrown){
                        alert(errorThrown);
                    }
                });
            },
            unbindDeleteEventFileList : function(){
                $('.fileDiv').find('[href=#fileDiv]').remove();
            },
            saveVoteEvent : function(){
                $('.qna-reply > i').click(function(){
                    Qa.checkSaveVote(this);
                });
            },
            checkSaveVote : function(voteLiObj){
                var replyId = $(voteLiObj).closest('.thread').attr('data-qa-reply-id');
                var voteType = $(voteLiObj).attr('data-qa-vote-type');
                var isVote;
                if( voteType == 'UP' ){
                    isVote = true;
                } else {
                    isVote = false;
                }
                $.ajax({
                    type : 'POST',
                    data : { qaId : $('[name=qaId]').val(),
                             replyId : replyId,
                             isVote : isVote},
                    url : '/qa/reply/vote',
                    success : function(data){
                        if(data.resultCode == 1) {
                            if(data.data == null){
                                Qa.saveVote(voteLiObj);
                            } else {
                                alert("이미 추천/비추천 하셨습니다.");
                            }
                        }
                    },
                    error : function(XMLHttpRequest,textStatus,errorThrown){
                        alert(errorThrown);
                    }
                });
            },
            saveVote : function(voteLiObj){
                var replyId = $(voteLiObj).closest('.thread').attr('data-qa-reply-id');
                var voteType = $(voteLiObj).attr('data-qa-vote-type');
                var url = '';
                if(voteType == 'UP'){
                    url = '/qa/saveVoteUp';
                } else if(voteType == 'DOWN'){
                    url = '/qa/saveVoteDown';
                }
                $.ajax({
                    type : 'POST',
                    data : {qaId : $('[name=qaId]').val(),
                            replyId : replyId},
                    url : url,
                    success : function(data){
                        if(data.resultCode == 1) {
                            Qa.searchList();
                        }
                    },
                    error : function(XMLHttpRequest,textStatus,errorThrown){
                        alert(errorThrown);
                    }
                });
            },
            getQaReplyId : function(obj){
                var popoverId = $(obj).closest('.popover').attr('id');
                var qaReplyId = $('.thread .config').find('[aria-describedby='+ popoverId +']').closest('.thread').attr('data-qa-reply-id');
                this.qaReplyDelete(qaReplyId);
            },
            qaReplyDelete : function(qaReplyId){
                if (!confirm("댓글을 삭제하시겠습니까?")) {
                    return;
                }
                $.post('/qa/reply/delete/' + qaReplyId)
                    .done(function (response) {
                        if (response.resultCode != 1) {
                            alert(response.comment);
                            return;
                        }
                        Qa.searchList();
                    }).fail(function () {
                        alert('Error delete Qa Reply');
                    });
            }
        };

        var ConfirmDialog = {
            deleteConfirm : function(){
                $.confirm({
                    title: '확인',
                    content: '질문을 삭제하시겠습니까?',
                    confirmButton: '질문삭제',
                    cancelButton: '취소',
                    confirmButtonClass: 'btn-info',
                    confirm: function () {
                        Qa.deleteContents();
                    },
                    cancel: function(){
                        return true;
                    }
                });
            },
            successConfirm : function(){
                $.confirm({
                    title: '완료',
                    content: '삭제 완료 ',
                    confirmButton: '이동',
                    cancelButton: '취소',
                    confirmButtonClass: 'btn-info',
                    icon: 'fa fa-question-circle',
                    animation: 'top',
                    confirm: function () {
                        location.href = "/qa/main";
                    }
                });
            }
        }

    </script>
{{/partial}}

{{> template/base}}